{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    const currentDate = new Date();\n\n    if (selectedDate <= currentDate) {\n      alert('Please choose a date in the future');\n      document.getElementById('start-btn').disabled = true;\n    } else {\n      document.getElementById('start-btn').disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\ndocument.getElementById('start-btn').addEventListener('click', startTimer);\n\nlet countdownInterval;\n\nfunction startTimer() {\n  const selectedDate = new Date(\n    document.getElementById('datetime-picker').value\n  );\n  const currentDate = new Date();\n\n  if (selectedDate <= currentDate) {\n    alert('Please choose a date in the future');\n    return;\n  }\n\n  document.getElementById('start-btn').disabled = true;\n  document.getElementById('datetime-picker').disabled = true;\n\n  const difference = selectedDate.getTime() - currentDate.getTime();\n\n  countdownInterval = setInterval(() => {\n    const timeLeft = convertMs(selectedDate.getTime() - new Date().getTime());\n\n    document.getElementById('days').innerText = addLeadingZero(timeLeft.days);\n    document.getElementById('hours').innerText = addLeadingZero(timeLeft.hours);\n    document.getElementById('minutes').innerText = addLeadingZero(\n      timeLeft.minutes\n    );\n    document.getElementById('seconds').innerText = addLeadingZero(\n      timeLeft.seconds\n    );\n\n    if (\n      timeLeft.days === 0 &&\n      timeLeft.hours === 0 &&\n      timeLeft.minutes === 0 &&\n      timeLeft.seconds === 0\n    ) {\n      clearInterval(countdownInterval);\n      alert('Countdown finished!');\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value < 10 ? '0' + value : value;\n}\n"],"names":["options","selectedDates","flatpickr","startTimer","countdownInterval","selectedDate","currentDate","timeLeft","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"wIAIA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACAA,EAAc,CAAC,GAChB,IAAI,MAGtB,MAAM,oCAAoC,EAC1C,SAAS,eAAe,WAAW,EAAE,SAAW,IAEhD,SAAS,eAAe,WAAW,EAAE,SAAW,EAEnD,CACH,EAEAC,EAAU,mBAAoBF,CAAO,EAErC,SAAS,eAAe,WAAW,EAAE,iBAAiB,QAASG,CAAU,EAEzE,IAAIC,EAEJ,SAASD,GAAa,CACpB,MAAME,EAAe,IAAI,KACvB,SAAS,eAAe,iBAAiB,EAAE,KAC/C,EACQC,EAAc,IAAI,KAExB,GAAID,GAAgBC,EAAa,CAC/B,MAAM,oCAAoC,EAC1C,MACD,CAED,SAAS,eAAe,WAAW,EAAE,SAAW,GAChD,SAAS,eAAe,iBAAiB,EAAE,SAAW,GAEnCD,EAAa,QAAO,EAAKC,EAAY,QAAU,EAElEF,EAAoB,YAAY,IAAM,CACpC,MAAMG,EAAWC,EAAUH,EAAa,QAAS,EAAG,IAAI,KAAI,EAAG,QAAO,CAAE,EAExE,SAAS,eAAe,MAAM,EAAE,UAAYI,EAAeF,EAAS,IAAI,EACxE,SAAS,eAAe,OAAO,EAAE,UAAYE,EAAeF,EAAS,KAAK,EAC1E,SAAS,eAAe,SAAS,EAAE,UAAYE,EAC7CF,EAAS,OACf,EACI,SAAS,eAAe,SAAS,EAAE,UAAYE,EAC7CF,EAAS,OACf,EAGMA,EAAS,OAAS,GAClBA,EAAS,QAAU,GACnBA,EAAS,UAAY,GACrBA,EAAS,UAAY,IAErB,cAAcH,CAAiB,EAC/B,MAAM,qBAAqB,EAE9B,EAAE,GAAI,CACT,CAEA,SAASI,EAAUE,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAMA,EAAQA,CACpC"}